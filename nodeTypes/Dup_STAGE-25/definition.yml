fileVersion: 1
id: "25"
isDisabled: false
metadata:
  defaultStorageLocation: null
  error: null
  nodeMetadataSpec: |-
    capitalized: Copy of Stage
    short: STG
    plural: Stages
    tagColor: "#2EB67D"
    deployStrategy: advanced
    config:
      - groupName: Options
        items:
          - type: materializationSelector
            default: somethingelseentirely
            options:
              - somethingelseentirely
            isRequired: true
          - type: multisourceToggle
            enableIf: "{% if node.materializationType == 'table' %} true {% else %} false {% endif %}"
          - type: overrideSQLToggle
            enableIf: "{% if node.materializationType == 'view' %} true {% else %} false {% endif %}"

          - displayName: Multi Source Strategy
            attributeName: insertStrategy
            type: dropdownSelector
            default: INSERT
            options:
              - "INSERT"
              - "UNION"
              - "UNION ALL"
            isRequired: true
            enableIf: "{% if node.isMultisource %} true {% else %} false {% endif %}"
          - displayName: Truncate Before
            attributeName: truncateBefore
            type: toggleButton
            default: true
          - displayName: Enable Tests
            attributeName: testsEnabled
            type: toggleButton
            default: true

          - displayName: Pre-SQL
            attributeName: preSQL
            type: textBox
            syntax: sql
            isRequired: false
          - displayName: Post-SQL
            attributeName: postSQL
            type: textBox
            syntax: sql
            isRequired: false
    Use this in Create template
    {% if currentState is not defined and desiredState is defined %}
        {{ stage('CREATE THING') }}
        CREATE OR REPLACE TABLE {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
        (
            {% for col in desiredState.columns %}
                "{{ col.name }}" {{ col.dataType }}
                {%- if not col.nullable %} NOT NULL
                    {%- if col.defaultValue | length > 0 %} DEFAULT {{ col.defaultValue }}{% endif %}
                {% endif %}
                {%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}
                {%- if not loop.last -%}, {% endif %}
            {% endfor %}
        )
        {%- if desiredState.node.description | length > 0 %} COMMENT = '{{ desiredState.node.description | escape }}'{% endif %}
    {% elif currentState is defined and desiredState is not defined %}
        {{ stage('DROP THING') }}
        DROP TABLE {{ ref_no_link(currentState.node.location.name, currentState.node.name) }}
    {% elif currentState is defined and desiredState is defined %}
        {{ stage('RECREATE THING') }}
        CREATE OR REPLACE TABLE {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
        (
            {% for col in desiredState.columns %}
                "{{ col.name }}" {{ col.dataType }}
                {%- if not col.nullable %} NOT NULL
                    {%- if col.defaultValue | length > 0 %} DEFAULT {{ col.defaultValue }}{% endif %}
                {% endif %}
                {%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}
                {%- if not loop.last -%}, {% endif %}
            {% endfor %}
        )
        {%- if desiredState.node.description | length > 0 %} COMMENT = '{{ desiredState.node.description | escape }}'{% endif %}
    {% endif %}
name: Dup_STAGE
type: NodeType
